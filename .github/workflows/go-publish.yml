# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go test

on:
  release:
    types: ['published']

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.x

    - name: Mod tidy
      run: go mod tidy

    - name: Linux build
      run: |
        go build -o cmd/sdwanctl .
        cd ./cmd
        tar -czf sdwanctl-linux-${{ github.event.release.tag_name }}.tar.gz ./sdwanctl
        rm ./sdwanctl

    - name: Windows build
      run: |
        GOOS=windows GOARCH=amd64 go build -o cmd/sdwanctl.exe .
        cd ./cmd
        tar -czf sdwanctl-windows-${{ github.event.release.tag_name }}.tar.gz ./sdwanctl.exe
        rm ./sdwanctl.exe

    - name: Upload linux artifact
      uses: actions/upload-artifact@v3
      with:
        name: sdwanctl-linux-${{ github.event.release.tag_name }}.tar.gz
        path: cmd/sdwanctl-linux-${{ github.event.release.tag_name }}.tar.gz

    - name: Upload windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: sdwanctl-windows-${{ github.event.release.tag_name }}.zip
        path: cmd/sdwanctl-windows-${{ github.event.release.tag_name }}.tar.gz





